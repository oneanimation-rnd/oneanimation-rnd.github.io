îœ¼ :py:mod:`oa.rigging.tools.weights_editor_tool.widgets.weights_table_view`
====================================================================================================================================================

.. py:module:: oa.rigging.tools.weights_editor_tool.widgets.weights_table_view


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   oa.rigging.tools.weights_editor_tool.widgets.weights_table_view.TableView
   oa.rigging.tools.weights_editor_tool.widgets.weights_table_view.TableModel




.. py:class:: TableView(editor_inst)

   Bases: :py:obj:`oa.rigging.tools.weights_editor_tool.widgets.abstract_weights_view.AbstractWeightsView`

   .. py:attribute:: update_ended
      

      

   .. py:method:: selectionChanged(selected, deselected)


   .. py:method:: closeEditor(editor, hint)

      Enables multiple cells to be set.


   .. py:method:: sort_ascending_on_triggered()


   .. py:method:: sort_descending_on_triggered()


   .. py:method:: sort_vert_order_on_triggered()


   .. py:method:: cell_selection_on_changed()

      Selects vertexes based on what was selected on the table.


   .. py:method:: reorder_rows(column, order)

      Re-orders and displays rows by weight values.

      :param column: The influence to compare weights with.
      :type column: int
      :param order: The direction to sort the weights by.
                    If None, re-orders based on vertex index.
      :type order: QtCore.Qt.SortOrder


   .. py:method:: color_headers()


   .. py:method:: select_items_by_inf(inf)


   .. py:method:: get_selected_verts_and_infs()


   .. py:method:: save_table_selection()

      Saves table's selection to a data set.

      :returns: A dictionary representing the selection.
                {inf_name:[vert_index, ..]}


   .. py:method:: load_table_selection(selection_data)

      Attempts to load selection by supplied data set.

      :param selection_data: See save method for data's structure.
      :type selection_data: dict


   .. py:method:: end_update()



.. py:class:: TableModel(editor_inst, parent=None)

   Bases: :py:obj:`oa.rigging.tools.weights_editor_tool.widgets.abstract_weights_view.AbstractModel`

   .. py:method:: rowCount(parent)


   .. py:method:: columnCount(parent)


   .. py:method:: data(index, role)


   .. py:method:: setData(index, value, role)

      Qt doesn't handle multiple cell edits very well.
      This is the only place we can get the user's input, so first we check if it's valid first.
      If not, all other cells will be ignored.


   .. py:method:: headerData(column, orientation, role)

      Deterimines the header's labels and style.


   .. py:method:: get_vert_index(row)


   .. py:method:: get_value_by_index(index)



