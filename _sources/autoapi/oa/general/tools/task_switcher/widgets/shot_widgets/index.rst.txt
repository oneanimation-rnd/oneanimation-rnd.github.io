îœ¼ :py:mod:`oa.general.tools.task_switcher.widgets.shot_widgets`
============================================================================================================================

.. py:module:: oa.general.tools.task_switcher.widgets.shot_widgets

.. autoapi-nested-parse::

   Parses through directories to collect the project's available episodes and sequences to display in a treeview.

   Author:
       Jason Labbe



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   oa.general.tools.task_switcher.widgets.shot_widgets.ColumnIndex
   oa.general.tools.task_switcher.widgets.shot_widgets.ShotsTab
   oa.general.tools.task_switcher.widgets.shot_widgets.TreeView
   oa.general.tools.task_switcher.widgets.shot_widgets.ProxyModel
   oa.general.tools.task_switcher.widgets.shot_widgets.TreeModel
   oa.general.tools.task_switcher.widgets.shot_widgets.TreeNode




.. py:class:: ColumnIndex

   .. py:attribute:: Shots
      :annotation: = 0

      


.. py:class:: ShotsTab(parent=None)

   Bases: :py:obj:`PySide2.QtWidgets.QWidget`

   .. py:method:: showEvent(event)


   .. py:method:: update_ep_completer()


   .. py:method:: update_seq_completer()


   .. py:method:: ep_filter_on_returned()


   .. py:method:: update_filter()

      Updates proxy's filter string.


   .. py:method:: on_shot_selected(indexes)



.. py:class:: TreeView(parent=None)

   Bases: :py:obj:`PySide2.QtWidgets.QTreeView`

   .. py:attribute:: shot_selected
      

      

   .. py:method:: selectionChanged(selected, deselected)

      Updates info viewer when selection changes.


   .. py:method:: keyPressEvent(event)


   .. py:method:: on_double_clicked(index)


   .. py:method:: on_context_menu_triggered(point)

      Creates right-click context menu at the supplied point.


   .. py:method:: on_open_shot_dir_triggered()


   .. py:method:: on_copy_to_clipboard_triggered()


   .. py:method:: on_create_shot_clicked()


   .. py:method:: on_shot_created(data)


   .. py:method:: on_archive_triggered()


   .. py:method:: on_open_validator_triggered()


   .. py:method:: get_item_path(mapped_index)


   .. py:method:: get_current_seq_names()


   .. py:method:: fill_tree()

      Reset and add tree node objects.


   .. py:method:: go_to(episode, sequence, task_type)

      Expands and scrolls to the index that matches the suppied parameters.


   .. py:method:: archive_selected()


   .. py:method:: open_validator()



.. py:class:: ProxyModel(parent=None)

   Bases: :py:obj:`PySide2.QtCore.QSortFilterProxyModel`

   Proxy used between QTreeView and QAbstractItemModel to filter and sort items.

   .. py:method:: filterAcceptsRow(row, parent_index)

      Built-in function to filter what items are seen.


   .. py:method:: has_accepted_sequences(row, parent_index)



.. py:class:: TreeModel(parent=None)

   Bases: :py:obj:`oa.general.tools.task_switcher.abstract_widgets.abstract_tree_model.AbstractTreeModel`

   
   QTreeView uses this class to handle all its data for best performance.

   .. py:method:: data(index, role)

      Edit this to determine how the model should get its data from tree nodes.


   .. py:method:: flags(index)

      Sets a role for columns.


   .. py:method:: get_data(project=None)


   .. py:method:: get_all_ep_names()


   .. py:method:: find_it(episode, sequence, task_type, pindex=None)

      Recursively iterates through the tree view's model indexes and yields any
      index that matches the supplied parameters.

      :param episode: The episode's name.
      :type episode: string
      :param sequence: The sequence's name.
      :type sequence: string
      :param task_type: The shot task type (ANM or LA).
      :type task_type: string
      :param pindex: The index to search with.
      :type pindex: QModelIndex



.. py:class:: TreeNode(node_type, container_type=None, meta_data=None, _data=None, parent=None)

   Bases: :py:obj:`oa.general.tools.task_switcher.abstract_widgets.abstract_tree_node.AbstractTreeNode`

   .. py:method:: appendChild(node_type, container_type, meta_data, _data)

      Appends a new TreeNode child to self.



