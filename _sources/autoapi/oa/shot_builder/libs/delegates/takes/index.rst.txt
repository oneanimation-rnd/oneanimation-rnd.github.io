îœ¼ :py:mod:`oa.shot_builder.libs.delegates.takes`
==============================================================================================

.. py:module:: oa.shot_builder.libs.delegates.takes


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   oa.shot_builder.libs.delegates.takes.save
   oa.shot_builder.libs.delegates.takes.load
   oa.shot_builder.libs.delegates.takes._ensure_single_take
   oa.shot_builder.libs.delegates.takes.ensure_takes
   oa.shot_builder.libs.delegates.takes._reformat_take_code_output
   oa.shot_builder.libs.delegates.takes._reformat_take_code_input



.. py:function:: save(context, comment='')


.. py:function:: load(context, episode=None, sequence=None, shot=None, version=None)


.. py:function:: _ensure_single_take(take_name, parent_take)


.. py:function:: ensure_takes()


.. py:function:: _reformat_take_code_output(take_creation_code)


.. py:function:: _reformat_take_code_input(take_creation_code, take_name)

   Reformat the code so it is possible to apply it
   to the objects without any errors.

   For .take file structure reference see
   https://www.sidefx.com/forum/topic/4691/

   Change all the GUID paths to real node paths or
   remove references if the node doesn't exist in
   the scene.

   :param take_creation_code: .take file contents.
   :type take_creation_code: str
   :param take_name: the name of the take to format.
   :type take_name: str

   :returns: Reformatted code on success.


