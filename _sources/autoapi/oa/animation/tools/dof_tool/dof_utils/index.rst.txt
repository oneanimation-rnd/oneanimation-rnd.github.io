îœ¼ :py:mod:`oa.animation.tools.dof_tool.dof_utils`
================================================================================================

.. py:module:: oa.animation.tools.dof_tool.dof_utils


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   oa.animation.tools.dof_tool.dof_utils.ViewportOff
   oa.animation.tools.dof_tool.dof_utils.UndoStack



Functions
~~~~~~~~~

.. autoapisummary::

   oa.animation.tools.dof_tool.dof_utils.load_pixmap
   oa.animation.tools.dof_tool.dof_utils.get_eyes_target
   oa.animation.tools.dof_tool.dof_utils.get_shot_data
   oa.animation.tools.dof_tool.dof_utils.get_shot_range
   oa.animation.tools.dof_tool.dof_utils.get_shot_from_clip
   oa.animation.tools.dof_tool.dof_utils.get_scene_cameras
   oa.animation.tools.dof_tool.dof_utils.is_a_camera_asset
   oa.animation.tools.dof_tool.dof_utils.add_string_attr
   oa.animation.tools.dof_tool.dof_utils.fstop_to_string
   oa.animation.tools.dof_tool.dof_utils.build_new_clip_name
   oa.animation.tools.dof_tool.dof_utils.lerp_color
   oa.animation.tools.dof_tool.dof_utils.lerp_tri_colors
   oa.animation.tools.dof_tool.dof_utils.open_time_editor
   oa.animation.tools.dof_tool.dof_utils.get_clip_ranges
   oa.animation.tools.dof_tool.dof_utils.clip_has_holds
   oa.animation.tools.dof_tool.dof_utils.apply_transitions
   oa.animation.tools.dof_tool.dof_utils.collect_surrounding_clips
   oa.animation.tools.dof_tool.dof_utils.create_clip
   oa.animation.tools.dof_tool.dof_utils.update_fstop
   oa.animation.tools.dof_tool.dof_utils.focus_new_locator
   oa.animation.tools.dof_tool.dof_utils.set_new_focus
   oa.animation.tools.dof_tool.dof_utils.bake_clips
   oa.animation.tools.dof_tool.dof_utils.unbake_clips



Attributes
~~~~~~~~~~

.. autoapisummary::

   oa.animation.tools.dof_tool.dof_utils.dof_comp


.. py:data:: dof_comp
   :annotation: = dofComposition

   

.. py:class:: ViewportOff

   Bases: :py:obj:`object`

   Disables the viewport's redraw.

   .. py:method:: __enter__()


   .. py:method:: __exit__(exc_type, exc_val, exc_tb)



.. py:class:: UndoStack(name='')

   Includes all operations as a single chunk so Maya can undo/redo all at once.

   .. py:method:: __enter__()


   .. py:method:: __exit__(exc_type, exc_val, exc_tb)



.. py:function:: load_pixmap(file_name, width=None, height=None)


.. py:function:: get_eyes_target(objs)

   Tries to get eyes locator from supplied objects.

   :param objs: A list of objects.
   :type objs: string[]

   :returns: The asset's eyes locator.


.. py:function:: get_shot_data()

   Gets and returns the scene cp's json data.


.. py:function:: get_shot_range(time)

   Finds what shot it's in by the supplied time and returns the shot's info.

   :param time: A frame to query from.
   :type time: float

   :returns: The shot's name, start and end frames.


.. py:function:: get_shot_from_clip(clip)

   Checks time of the supplied clip and determines what shot it belongs to.

   :param clip: A name of an animation clip.
   :type clip: string

   :returns: The name of the clip's shot.


.. py:function:: get_scene_cameras()


.. py:function:: is_a_camera_asset(obj)

   Traverses up hierarchy to see if the supplied object is a camera asset.

   :param obj: An object to traverse from.
   :type obj: string

   :returns: True if it detects it as a camera asset.


.. py:function:: add_string_attr(obj, attr, value)

   Helper function to add a string attribute.

   :param obj: Object to add attribute on.
   :type obj: string
   :param attr: The attribute's new.
   :type attr: string
   :param value: The attribute's value.
   :type value: string


.. py:function:: fstop_to_string(value)

   Converts fstop value to a name that represents its strength.

   :param value: A range of 0.0 to 1.0.
   :type value: float

   :returns: A string.


.. py:function:: build_new_clip_name(target, value)


.. py:function:: lerp_color(start_color, end_color, blend_value)

   Lerps between two colors by supplied blend value.

   :param start_color:
   :type start_color: tuple
   :param end_color:
   :type end_color: tuple
   :param blend_value: A value between 0.0 to 1.0
                       0.0=start_color
                       0.5=50% mix of both colors
                       1.0=end_color
   :type blend_value: float

   :returns: A list of rgb values.


.. py:function:: lerp_tri_colors(start_color, mid_color, end_color, value)

   Lerps between three colors by supplied blend value.

   :param start_color:
   :type start_color: tuple
   :param mid_color:
   :type mid_color: tuple
   :param end_color:
   :type end_color: tuple
   :param value: A value between 0.0 to 1.0
                 0.0=start_color
                 0.5=mid_color
                 1.0=end_color
   :type value: float

   :returns: A list of rgb values.


.. py:function:: open_time_editor()

   Opens up the time editor and creates dof composition.


.. py:function:: get_clip_ranges(clip)

   Gets and returns the supplied clip's start and end frames.
   There's no built-in way to get the clip's 'real' range, it needs to be calculated.

   :param clip: An animation clip's name.
   :type clip: string


.. py:function:: clip_has_holds(clip)

   Returns True if the supplied clip has holds in it.

   :param clip: An animation clip's name.
   :type clip: string


.. py:function:: apply_transitions()

   Adds transitions to all neighbouring clips.


.. py:function:: collect_surrounding_clips(time)

   Checks the previous, current, and next clips that are relative to the supplied time.

   :param time: A frame to check from.
   :type time: int

   :returns: A list that contains the previous, current, and next clips.
             If a clip can't be found it will append the clip as None.


.. py:function:: create_clip(focus_ctrl, target, fstop_plug, fstop, shot_start, shot_end, buffer=4, name='dofClip', color=(1, 0, 0))

   Creates a new clip in the time editor.

   :param focus_ctrl: The camera's focus distance ctrl.
   :type focus_ctrl: string
   :param target: The object to focus onto.
   :type target: string
   :param cam_attrs_ctrl: The camera's attribute ctrl.
   :type cam_attrs_ctrl: string
   :param fstop_plug: The full name of the fstop's attribute.
   :type fstop_plug: string
   :param fstop: Range of 0.0 to 1.0.
   :type fstop: float
   :param shot_start: The frame that the new clip will snap from.
   :type shot_start: int
   :param shot_end: The farme that the new clip will snap to.
   :type shot_end: int
   :param buffer: The number of frames that the new clip must have a gap with its neighbours.
   :type buffer: int
   :param name: The name of the new clip.
   :type name: string
   :param color: Rgb values of the new clip.
   :type color: tuple

   :returns: The name of the new clip.


.. py:function:: update_fstop(value)

   Updates all selected animation clips with the supplied fstop.

   :param value: Range of 0.0 to 1.0.
   :type value: float


.. py:function:: focus_new_locator(focus_ctrl, cam_attrs_ctrl)


.. py:function:: set_new_focus(focus_ctrl, cam_attrs_ctrl, target, fstop)

   Changes dof focus to the supplied target with the supplied fstop.

   :param focus_ctrl: The camera's focus distance ctrl.
   :type focus_ctrl: string
   :param cam_attrs_ctrl: The camera's attribute ctrl.
   :type cam_attrs_ctrl: string
   :param target: The object to focus onto.
   :type target: string
   :param fstop: Range of 0.0 to 1.0.
   :type fstop: float


.. py:function:: bake_clips(focus_ctrl, cam_attrs_ctrl)

   Bakes clips to keys so that the dof is no longer driven from the time editor.

   :param focus_ctrl: The camera's focus distance ctrl.
   :type focus_ctrl: string
   :param cam_attrs_ctrl: The camera's attributes ctrl.
   :type cam_attrs_ctrl: string


.. py:function:: unbake_clips(focus_ctrl, cam_attrs_ctrl)

   Deletes all keys from focus and attributes ctrls and switches it back to be driven by clips.

   :param focus_ctrl: The camera's focus distance ctrl.
   :type focus_ctrl: string
   :param cam_attrs_ctrl: The camera's attributes ctrl.
   :type cam_attrs_ctrl: string


